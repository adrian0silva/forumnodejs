// Carrega vari√°veis de ambiente do arquivo .env
import 'dotenv/config';
import { DataSource, DataSourceOptions } from 'typeorm';

// === CONFIGURA√á√ÉO DO TYPEORM ===
// Existem duas formas de configurar a conex√£o:
// 1Ô∏è‚É£ Tradicional (campos separados: host, port, user, etc.)
// 2Ô∏è‚É£ Moderna (usando DATABASE_URL completa ‚Äî ideal para servi√ßos como Neon, Render, etc.)

// üî∏ FORMA ANTIGA ‚Äî deixada comentada apenas como refer√™ncia
/*
const dataSourceOptions: DataSourceOptions = {
  type: 'postgres',
  host: process.env.DB_HOST,               // Endere√ßo do servidor PostgreSQL
  port: Number(process.env.DB_PORT),       // Porta do banco (geralmente 5432)
  username: process.env.DB_USERNAME,       // Usu√°rio do banco
  password: process.env.DB_PASSWORD,       // Senha do banco
  database: process.env.DB_NAME,           // Nome do banco de dados
  
  migrations: [__dirname + '/migrations/*.{js,ts}'],   // Caminho das migrations
};
*/

// üîπ NOVA CONFIGURA√á√ÉO ‚Äî usando DATABASE_URL completa
// Exemplo no .env:
// DATABASE_URL="postgresql://usuario:senha@host:porta/banco?sslmode=require"
const dataSourceOptions: DataSourceOptions = {
  type: 'postgres',
  url: process.env.DATABASE_URL,                 // URL √∫nica de conex√£o (padr√£o Neon)
  // entities: [__dirname + '/../**/*.entity.{js,ts}'], // Descomente se estiver usando entidades
  migrations: [__dirname + '/migrations/*.{js,ts}'],   // Caminho das migrations
  ssl: { rejectUnauthorized: false },            // Necess√°rio para conex√µes seguras (Neon, etc.)
};

// Cria a inst√¢ncia de DataSource a partir das op√ß√µes definidas
const dataSource = new DataSource(dataSourceOptions);

// Exporta a inst√¢ncia como padr√£o ‚Äî usada em scripts e CLI do TypeORM
export default dataSource;
